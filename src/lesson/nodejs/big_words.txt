  - Module: A reuseable block of code whose existence does not accidentally impact other code.

  - CommonJS modules: An agreed upon standard for how code modules should be structured.

  - First-Class functions: Everything you can do with other types you can do with functions.

  - An expression: A block of code that results in a value.

  - Invoke: Run the function.

  - Name/value pair: A name which maps to a value.

  - Object: A collection of name/value pairs.

  - Object literal: Name/value pairs separated by commas and surrounded by curly braces.

  - Inheritance: One object gets access to the properties and methods of another object.

  - Function constructors: A normal function that is used to construct objects.

  - Primitive: A type of data that represents a single value. /not an object/

  - IIFE = Immediately Invoked Function Expression

  - Scope: Where in code you have access to particular variable or function.

  - require is a function, that you pass a "path" too
  - module.exports i what the require function returns

  - JSON = Javascript Object Notation: A standard for structuring data that is inspired by Javascript object literals.

  - Revealing module pattern: Exposing only the properties and methods you want via an returned object.

  - Mutate: To change something.

  -